---

- set_fact:
     miniconda_package: Miniconda3-{{ miniconda_version }}-Linux-x86_64.sh
     miniconda_install_dir: "{{ miniconda_home }}/miniconda{{ python_version }}.{{ miniconda_version }}"

- name: stat the install directory
  stat: 
    path: "{{ miniconda_install_dir }}"
  register: miniconda_check

- name: download miniconda installer
  get_url:
    url:  "{{ miniconda_installer.url }}/{{ miniconda_installer.file }}"
    dest: "{{ my_remote_tmp }}/{{ miniconda_package }}"
    mode: 0755
  when: miniconda_check.stat.isdir is not defined

- name: Set executable permissions
  file: 
    path: "{{ my_remote_tmp }}/{{ miniconda_package }}"
    mode: 0755
  when: miniconda_check.stat.isdir is not defined

- name: execute downloaded items
  command: "{{ my_remote_tmp }}/{{ miniconda_package }} -b -p {{ miniconda_home }}"
  args:
    creates: "{{ miniconda_install_dir }}"
    executable: "/bin/bash"
  when: miniconda_downloaded|success
  ignore_errors: yes
  register: miniconda_cleanup

- name: cleanup the miniconda install script
  file: 
    name:  "{{ my_remote_tmp }}/{{ miniconda_package }}" 
    state: absent
  when: miniconda_cleanup|success

- name: create miniconda
  command: '{{ miniconda_home }}/bin/conda create --yes -n {{ item.name }} python=3.5 {{ item.pkgs }}'
  args:
    creates: '{{ miniconda_home }}/envs/{{ item.name }}'
  register: miniconda_venv_created
  with_items: miniconda_environments

- name: deploy services
  become: yes
  template:
    src:  "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - src: dscheduler.service.j2
      dest: /usr/lib/systemd/system/dscheduler.service
    - src: dworker.service.j2
      dest: /usr/lib/systemd/system/dworker.service
